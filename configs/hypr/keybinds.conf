
$MOD = SUPER

# SYSTEM CONTROLS
bind = $MOD, L, exec, swaylock
# For some reason, I cannot use the rofi-power-menu commands with custom theming inline, so I have to use custom packaged binary
bind = CTRL + ALT, Delete, exec, power-menu
# Set sound output and input device
bindl = $MOD, O, exec, killall rofi || rofi-pulse-select sink
bindl = $MOD, I, exec, killall rofi || rofi-pulse-select source
bindl = , XF86AudioMicMute, exec, swayosd --input-volume mute-toggle
bindl = , XF86AudioMute, exec, swayosd --output-volume mute-toggle
bindle = , XF86AudioLowerVolume, exec, swayosd --output-volume lower
bindle = , XF86AudioRaiseVolume, exec, swayosd --output-volume raise
bindle = , XF86MonBrightnessDown, exec, swayosd --brightness lower
bindle = , XF86MonBrightnessUp, exec, swayosd --brightness raise
bind = $MOD, period, exec, swaync-client -t -sw
bind = CTRL + ALT, R, exec, kitty --title "reload-system" -e zsh -ic "upnix && hyprctl reload"
# bindlr = , Caps_Lock, exec, swayosd --caps-lock

# APPS
bind = $MOD, T, exec, kitty
bind = $MOD, B, exec, google-chrome-stable
bind = $MOD, F, exec, kitty ranger
bind = $MOD, Q, killactive, 
bind = ALT, F4, exec, hyprctl kill

# ROFI UTILS
bindr = $MOD, Super_L, exec, killall rofi || rofi -show drun -kb-cancel
bind = $MOD, E, exec, killall rofi || rofi -no-show-icons -modi emoji -show emoji -kb-cancel
bind = $MOD, C, exec, killall rofi || rofi -show calc -kb-cancel -theme-str 'entry { placeholder: "Calculate"; }'
bind = $MOD, V, exec, killall rofi || cliphist list | rofi -dmenu -no-show-icons | cliphist decode | wl-copy
bind = $MOD, R, exec, killall rofi || rofi -show run -run-shell-command 'kitty -e zsh -ic "{cmd} && read"' -no-show-icons

# SCREENSHOTS
# Select area and save to clipboard
bind = $MOD, Print, exec, grim -g "$(slurp)" - | wl-copy
bind = $MOD + SHIFT, S, exec, grim -g "$(slurp)" - | wl-copy
# Screenshot whole screen and save to clipboard
bind = , Print, exec, grim - | wl-copy
# Select area and annotate with swappy
bind = $MOD + SHIFT, Print, exec, grim -g "$(slurp)" - | swappy -f -

# WINDOW MANAGEMENT
# Maximize
bind = $MOD, M, fullscreen, 1
# Fullscreen
bind = , F11, fullscreen, 0
# Toggle maximize with logitech thumb button or MOD + middle mouse button
bind = , mouse:277, fullscreen, 1
bind = $MOD, mouse:274, fullscreen, 1
# Window modes
bind = $MOD, G, togglefloating, 
bind = $MOD, P, pseudo,
bind = $MOD, J, togglesplit,

# Move focus with MOD + arrow keys
bind = $MOD, left, movefocus, l
bind = $MOD, right, movefocus, r
bind = $MOD, up, movefocus, u
bind = $MOD, down, movefocus, d

# Scroll through existing workspaces with MOD + scroll
bind = $MOD, mouse_down, workspace, r+1
bind = $MOD, mouse_up, workspace, r-1
bind = $MOD, mouse_left, workspace, r+1
bind = $MOD, mouse_right, workspace, r-1

bind = $MOD+CTRL, right, workspace, r+1
bind = $MOD+CTRL, left, workspace, r-1


# Move/resize windows with MOD + LMB/RMB and dragging
bindm = $MOD, mouse:272, movewindow
bindm = $MOD, mouse:273, resizewindow

# Switch workspaces with MOD + [0-9]
#bind = $MOD, 1, workspace, 1
#bind = $MOD, 2, workspace, 2
#bind = $MOD, 3, workspace, 3
#bind = $MOD, 4, workspace, 4
#bind = $MOD, 5, workspace, 5
#bind = $MOD, 6, workspace, 6
#bind = $MOD, 7, workspace, 7
#bind = $MOD, 8, workspace, 8
#bind = $MOD, 9, workspace, 9
#bind = $MOD, 0, workspace, 10

# Move active window to a workspace with MOD + SHIFT + [0-9]
#bind = $MOD SHIFT, 1, movetoworkspace, 1
#bind = $MOD SHIFT, 2, movetoworkspace, 2
#bind = $MOD SHIFT, 3, movetoworkspace, 3
#bind = $MOD SHIFT, 4, movetoworkspace, 4
#bind = $MOD SHIFT, 5, movetoworkspace, 5
#bind = $MOD SHIFT, 6, movetoworkspace, 6
#bind = $MOD SHIFT, 7, movetoworkspace, 7
#bind = $MOD SHIFT, 8, movetoworkspace, 8
#bind = $MOD SHIFT, 9, movetoworkspace, 9
#bind = $MOD SHIFT, 0, movetoworkspace, 10