
$MOD = SUPER

# SYSTEM CONTROLS
bind = $MOD, L, exec, swaylock
# 'power-menu' is a custom package
# bind = CTRL + ALT, Delete, exec, power-menu #! using Aylur's ags powermenu instead
# Set sound output and input device (TODO: make these custom to control rofi display)
bindl = $MOD, O, exec, killall rofi || rofi-pulse-select sink
bindl = $MOD, I, exec, killall rofi || rofi-pulse-select source
# Media keys (including headset) NO LONGER EXISTS
bindl = , XF86AudioMicMute, exec, volumectl -m toggle-mute
bindl = , XF86AudioMute, exec, volumectl toggle-mute
bindle = , XF86AudioLowerVolume, exec, volumectl -u down
bindle = , XF86AudioRaiseVolume, exec, volumectl -u up
bindle = , XF86MonBrightnessDown, exec, lightctl down
bindle = , XF86MonBrightnessUp, exec, lightctl up
# MX Keys always sends XF86AudioPlay, so this key will need to toggle play/pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
# Headset alternates between sending XF86AudioPlay and XF86AudioPause, so we need to explicitly bind pause, but we cannot explicitly bind play,
# so you will have to press headset twice in cases where you pause with kb and want to play again with headset
bindl = , XF86AudioPause, exec, playerctl pause
bindl = , XF86AudioPrev, exec, playerctl previous
bindl = , XF86AudioNext, exec, playerctl next
bind = CTRL + ALT, R, exec, kitty --title "reload-system" -e zsh -ic "upnix && hyprctl reload"

# APPS
bind = $MOD, T, exec, kitty
bind = $MOD, B, exec, google-chrome-stable
bind = $MOD, F, exec, thunar
bind = $MOD, Q, killactive, 
bind = ALT, F4, exec, hyprctl kill

# ROFI UTILS
# bindr = $MOD, Super_L, exec, killall rofi || rofi -show drun #! using Aylur's ags launcher instead
bind = $MOD, E, exec, killall rofi || rofi -no-show-icons -modi emoji -show emoji
# 'calculator' is a custom package
# bind = $MOD, C, exec, killall rofi || calculator #! using gnome-calculator instead
bind = $MOD, V, exec, killall rofi || cliphist list | rofi -dmenu -no-show-icons | cliphist decode | wl-copy
# 'run-command' is a custom package
# bind = $MOD, R, exec, killall rofi || run-command #! using Aylur's ags launcher instead

# SCREENSHOTS
# Select area and save to clipboard
bind = , Print, exec, grim -g "$(slurp)" - | wl-copy
# Select area and open in Swappy (can save to ~/Desktop)
bind = $MOD, Print, exec, grim -g "$(slurp)" - | swappy -f -
# Select area and open in Swappy (can save to ~/Desktop) - Logitech MX Keys uses this when pressing screenshot btn ðŸ¤·
bind = $MOD+SHIFT, S, exec, grim -g "$(slurp)" - | swappy -f -

# WINDOW MANAGEMENT
# Maximize
bind = $MOD, M, fullscreen, 1
# Fullscreen
bind = , F11, fullscreen, 0
# Toggle maximize with logitech thumb button or MOD + middle mouse button
bind = , mouse:277, fullscreen, 1
bind = $MOD, mouse:274, fullscreen, 1
# Window modes
bind = $MOD, G, togglefloating, 
bind = $MOD, P, pseudo,
bind = $MOD, J, togglesplit,

# Move focus with MOD + arrow keys
bind = $MOD, left, movefocus, l
bind = $MOD, right, movefocus, r
bind = $MOD, up, movefocus, u
bind = $MOD, down, movefocus, d

# Scroll through existing workspaces with MOD + scroll
bind = $MOD, mouse_up, workspace, r+1
bind = $MOD, mouse_down, workspace, r-1
bind = $MOD, mouse_left, workspace, r+1
bind = $MOD, mouse_right, workspace, r-1
# bind = $MOD, mouse_up, split-workspace, r+1
# bind = $MOD, mouse_down, split-workspace, r-1
# bind = $MOD, mouse_left, split-workspace, r+1
# bind = $MOD, mouse_right, split-workspace, r-1

bind = $MOD+CTRL, down, workspace, r+1
bind = $MOD+CTRL, up, workspace, r-1
# bind = $MOD+CTRL, down, split-workspace, r+1
# bind = $MOD+CTRL, up, split-workspace, r-1

# Move/resize windows with MOD + LMB/RMB and dragging
bindm = $MOD, mouse:272, movewindow
bindm = $MOD, mouse:273, resizewindow

# Switch workspaces with MOD + [0-9]
bind = $MOD, 1, workspace, 1
bind = $MOD, 2, workspace, 2
bind = $MOD, 3, workspace, 3
bind = $MOD, 4, workspace, 4
bind = $MOD, 5, workspace, 5
bind = $MOD, 6, workspace, 6
bind = $MOD, 7, workspace, 7
bind = $MOD, 8, workspace, 8
bind = $MOD, 9, workspace, 9
bind = $MOD, 0, workspace, 10
# bind = $MOD, 1, split-workspace, 1
# bind = $MOD, 2, split-workspace, 2
# bind = $MOD, 3, split-workspace, 3
# bind = $MOD, 4, split-workspace, 4
# bind = $MOD, 5, split-workspace, 5
# bind = $MOD, 6, split-workspace, 6
# bind = $MOD, 7, split-workspace, 7
# bind = $MOD, 8, split-workspace, 8
# bind = $MOD, 9, split-workspace, 9
# bind = $MOD, 0, split-workspace, 10

# Move active window to a workspace with MOD + SHIFT + [0-9]
bind = $MOD SHIFT, 1, movetoworkspace, 1
bind = $MOD SHIFT, 2, movetoworkspace, 2
bind = $MOD SHIFT, 3, movetoworkspace, 3
bind = $MOD SHIFT, 4, movetoworkspace, 4
bind = $MOD SHIFT, 5, movetoworkspace, 5
bind = $MOD SHIFT, 6, movetoworkspace, 6
bind = $MOD SHIFT, 7, movetoworkspace, 7
bind = $MOD SHIFT, 8, movetoworkspace, 8
bind = $MOD SHIFT, 9, movetoworkspace, 9
bind = $MOD SHIFT, 0, movetoworkspace, 10
# bind = $MOD SHIFT, 1, split-movetoworkspace, 1
# bind = $MOD SHIFT, 2, split-movetoworkspace, 2
# bind = $MOD SHIFT, 3, split-movetoworkspace, 3
# bind = $MOD SHIFT, 4, split-movetoworkspace, 4
# bind = $MOD SHIFT, 5, split-movetoworkspace, 5
# bind = $MOD SHIFT, 6, split-movetoworkspace, 6
# bind = $MOD SHIFT, 7, split-movetoworkspace, 7
# bind = $MOD SHIFT, 8, split-movetoworkspace, 8
# bind = $MOD SHIFT, 9, split-movetoworkspace, 9
# bind = $MOD SHIFT, 0, split-movetoworkspace, 10

# Aylur's ags dots
bind = CTRL + ALT, Delete, exec, ags -t powermenu
bind = $MOD, Tab, exec, ags -t overview
bindr = $MOD, Super_L, exec, ags -t launcher
